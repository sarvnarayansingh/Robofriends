{"version":3,"sources":["reportWebVitals.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","Robot","Error","SearchBox","props","className","type","placeholder","onChange","searchChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","console","log","searchfield","target","value","fetch","response","json","user","filterRobot","filter","data","name","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCwBCQ,EA5BE,SAAC,GAAY,EAAXC,MAEX,MAAM,IAAIC,MAAM,UCQTC,EAXG,SAACC,GACf,OACI,qBAAKC,UAAY,MAAjB,SACK,uBACGA,UAAU,iCACVC,KAAM,SACNC,YAAc,gBACdC,SAAUJ,EAAMK,kBCCjBC,EAPD,SAACN,GACX,OACI,qBAAKO,MAAS,CAACC,SAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAnE,SACKV,EAAMW,YCaJC,G,wDAhBX,WAAYZ,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAO,CACRC,UAAS,GAHC,E,sDAMlB,SAAmBC,EAAMC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKjB,MAAMW,a,GAdCQ,cCiDZC,E,kDA5CP,aAAe,IAAD,8BACd,gBAaJC,eAAgB,SAACC,GACbC,QAAQC,IAAI,EAAKX,MAAMY,aACvB,EAAKP,SAAS,CAACO,YAAaH,EAAMI,OAAOC,SAdzC,EAAKd,MAAQ,CACThB,MAAM,GACN4B,YAAY,IAJF,E,qDAOlB,WAAqB,IAAD,OAChBG,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UACtBxC,MAAK,SAAAyC,GAAO,EAAKb,SAAS,CAACrB,MAAMkC,S,oBAU1C,WAAU,IAAD,EACuBd,KAAKJ,MAA1BhB,EADF,EACEA,MAAM4B,EADR,EACQA,YACPO,EAAcnC,EAAMoC,QAAO,SAAAC,GAC7B,OAAOA,EAAKC,KAAKC,cAAcC,SAASZ,EAAYW,kBAExD,OAAIvC,EAAMyC,OAIF,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWI,aAAcY,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,MAAQmC,WAR3B,+C,GA3BDb,aCClBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.603b09a7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport Card from './Card';\n\nconst CardList = ({Robot}) => {\n    if(true){\n        throw new Error('Noooo')\n    }\n    // console.log(Robot);\n    const CardComponents = Robot.map((user,index) => {\n        \n        // console.log(index)\n        // console.log(\"=====\",user)\n        return (\n        <Card \n            key={index} \n            id = {Robot[index].id} \n            name ={Robot[index].name} \n            email={Robot[index].email}\n        />\n\n        )\n        \n    })\n\n    \n    return(\n        <div>\n           {CardComponents}\n        </div>\n    )\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = (props) => {\n    return(\n        <div className = \"pa3\">\n             <input \n                className=\"ba bg-light-blue b--green pa3 \" \n                type =\"search\" \n                placeholder = \"search robots\"\n                onChange={props.searchChange} />\n        </div>\n    )\n}\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll =(props) =>  {\n    return (\n        <div style = {{overflow: 'scroll', border:'5px solid black',height:'500px'}}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props)\n        this.state= {\n            hasError:false\n        }\n    }\n    componentsDidCatch(error,info) {\n        this.setState({hasError:true})\n    }\n    render(){\n        if (this.state.hasError){\n            return <h1>Ooops. that is not good</h1>\n        }\n        return this.props.children\n    }\n}\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport './App.css';\nimport ErrorBoundry from '../Components/ErrorBoundry'\nclass App extends Component {\n        constructor() {\n        super()\n        this.state = {\n            Robot:[],\n            searchfield:\"\"\n        }\n    }\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())\n            .then(user=>{this.setState({Robot:user})})\n        }\n    \n\n    onSearchChange= (event) =>{\n        console.log(this.state.searchfield);\n        this.setState({searchfield: event.target.value})\n        \n    }\n\n    render() {\n        const {Robot,searchfield} = this.state\n        const filterRobot = Robot.filter(data =>{\n            return data.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        if(!Robot.length) {\n            return <h1>Loading..</h1>\n        } else {\n            return(\n                <div className=\"tc\">\n                    <h1 className=\"f1\">Robofriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList Robot= {filterRobot} /> \n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }\n          \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}